version: '3.8'

services:
  pdf-rag-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: production
    container_name: pdf-rag-api-prod
    ports:
      - "8000:8000"
    volumes:
      - pdf_uploads_prod:/app/uploads
      - pdf_data_prod:/app/data
      - pdf_models_prod:/app/models
    environment:
      - ENVIRONMENT=production
      - MAX_FILE_SIZE=26214400
      - EMBEDDING_MODEL=all-MiniLM-L6-v2
      - DATA_DIR=/app/data
      - UPLOAD_DIR=/app/uploads
      - MODEL_CACHE_DIR=/app/models
      - DEFAULT_TOP_K=5
      - DEFAULT_SCORE_THRESHOLD=0.1
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - pdf-rag-prod-network

  # Redis for caching (production optimization)
  redis:
    image: redis:7-alpine
    container_name: pdf-rag-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data_prod:/data
    restart: always
    networks:
      - pdf-rag-prod-network

  # Nginx with production optimizations
  nginx-prod:
    image: nginx:alpine
    container_name: pdf-rag-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../frontend:/usr/share/nginx/html:ro
      - ./nginx-prod.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - pdf-rag-api
    restart: always
    networks:
      - pdf-rag-prod-network

volumes:
  pdf_uploads_prod:
  pdf_data_prod:
  pdf_models_prod:
  redis_data_prod:

networks:
  pdf-rag-prod-network:
    driver: bridge